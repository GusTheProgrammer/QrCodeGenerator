@page "/add"
@using QrCodeApp.Shared.Models
@inject HttpClient Http

<h3>Create a New QR Code</h3>

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
    Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Modal title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<EditForm Model="@qrCodeRequest" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />

    <div>
        <label>Title:</label>
        <InputText @bind-Value="qrCodeRequest.title" />
    </div>
    <div>
        <label>Description:</label>
        <InputText @bind-Value="qrCodeRequest.description" />
    </div>
    <div>
        <label>Link:</label>
        <InputText @bind-Value="qrCodeRequest.link" />
    </div>
    <div>
        <label>Type:</label>
        <InputSelect @bind-Value="qrCodeRequest.type">
            <option value="static">Static</option>
            <option value="dynamic">Dynamic</option>
        </InputSelect>
    </div>

    <button type="submit">Create QR Code</button>
</EditForm>

@if (!string.IsNullOrEmpty(qrCodeResult))
{
    <div>
        <h4>QR Code Result:</h4>
        <pre>@qrCodeResult</pre>
    </div>
}

@code {
    private QRCodeRequest qrCodeRequest = new QRCodeRequest();
    private string qrCodeResult;

    private async Task HandleValidSubmit()
    {
        var response = await Http.PostAsJsonAsync("qrCode", qrCodeRequest);
        qrCodeResult = await response.Content.ReadAsStringAsync();
    }

}
