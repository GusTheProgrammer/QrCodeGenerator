@page "/"
@using QrCodeApp.Shared.Models
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IDialogService DialogService


<PageTitle>QrCode Generator</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Hello, world!</MudText>
<MudText Class="mb-8">Welcome to your new app, powered by MudBlazor!</MudText>
<MudAlert Severity="Severity.Normal">You can find documentation and examples on our website here: <MudLink Href="https://mudblazor.com" Typo="Typo.body2" Color="Color.Inherit"><b>www.mudblazor.com</b></MudLink></MudAlert>

@if (isAuthenticated && qrCodeResponse?.data != null)
{

    <MudButton OnClick="ShowDialog" Variant="Variant.Filled" Color="Color.Primary">
        Add a new Qr Code
    </MudButton>

    <MudGrid Spacing="5" Justify="Justify.Center">
        @foreach (var qrCode in qrCodeResponse.data)
        {
            <MudItem xs="12" sm="6" md="4">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h5">@qrCode.title</MudText>
                                <MudText Typo="Typo.body2">Id: @qrCode.reference</MudText>

                            </CardHeaderContent>
                            <CardHeaderActions>
                                <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Default" />
                                <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Default" />
                            </CardHeaderActions>
                        </MudCardHeader>
                        <div class="d-flex justify-center">
                            <MudImage Height="250" Width="250" ObjectFit='ObjectFit.Fill' src="@qrCode.qrCode" Elevation="25" Class="rounded-lg" />
                        </div>

                        <MudCardContent>
                            @if (!string.IsNullOrEmpty(qrCode.description))
                        {
                            <MudText Typo="Typo.body2">@qrCode.description</MudText>
                        }
                    </MudCardContent>
                    <MudCardActions>
                        @if (qrCode.type == "static")
                        {
                            <MudChip Color="Color.Warning" Text="Static" />
                        }
                        else if (qrCode.type == "dynamic")
                        {
                            <MudChip Color="Color.Info" Text="Dynamic" />
                        }
                        <div style="flex-grow: 1;"></div>
                        <MudIconButton Icon="@Icons.Material.Filled.Download" Color="Color.Default" />
                        <a href="@qrCode.link" target="_blank"><MudIconButton Icon="@Icons.Material.Filled.OpenInBrowser" Color="Color.Default" /></a>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
}
else if (!isAuthenticated)
{
    <p>You need to be logged in to view this page.</p>
}
else
{
    <p>Loading or no data available...</p>
}

@code {
    private QrCodeData qrCodeResponse;
    private bool isAuthenticated = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            isAuthenticated = true;
            qrCodeResponse = await Http.GetFromJsonAsync<QrCodeData>("qrCode");
        }
    }

    private async Task ShowDialog()
    {
        var options = new DialogOptions { CloseButton = true };
        var dialog = DialogService.Show<AddQrCodeDialog>("Create a New QR Code", options);
    }



}
