@page "/register"
@using Newtonsoft.Json
@using QrCodeGenerator.Models
@inject ApiService ApiService
@inject IJSRuntime JSRuntime

<h3>Registration</h3>

<EditForm Model="@user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <InputText id="name" @bind-Value="user.Name" />
    <button type="submit">Register</button>
</EditForm>

@if (!string.IsNullOrEmpty(registrationMessage))
{
    <p>@registrationMessage</p>
}

@code {
    private User user = new User();
    private string registrationMessage = string.Empty;

    private async Task HandleRegistration()
    {
        try
        {
            var responseJson = await ApiService.GenerateApiKey();
            var responseObj = Newtonsoft.Json.JsonConvert.DeserializeObject<dynamic>(responseJson);
            var apiKey = (string)responseObj.data; // Extracting just the API key

            user.ApiKey = apiKey;
            var userDataJson = Newtonsoft.Json.JsonConvert.SerializeObject(user);
            await JSRuntime.InvokeVoidAsync("localStorage.setItem", "user", userDataJson);

            registrationMessage = "Registration successful! API Key generated.";
        }
        catch (Exception ex)
        {
            registrationMessage = $"Error during registration: {ex.Message}";
        }
    }

}